#!/bin/sh
#
# Copyright (C) 2014 Patrick Godschalk <argure@argure.nl>
#
# To the extent possible under law, the author has dedicated all copyright
# and related and neighbouring rights to this software to the public domain
# worldwide. This software is distributed without any warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication along
# with this software. If not, see
# <http://creativecommons.org/publicdomain/zero/1.0/>.

### BEGIN INIT INFO
# Provides:          npserver
# Required-Start:    $remote_fs $networking
# Required-Stop:     $remote_fs $networking
# Should-Start:
# Should-Stop:       
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: daemon for the nulpunt server
# Description:       This is the Nulpunt server, a tool to subscribe, annotate
#                    and amplify documents.
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

DAEMON=/usr/local/bin/npserver
NAME=npserver
DESC="Nulpunt server"

PIDFILE=/var/run/nulpunt.pid 

# Test if binary exisits
test -x $DAEMON || exit 0

DAEMON_OPTS="--verbose"
DAEMONUSER=npserver

# defaulting HTTP-FILES, HTTP-PORT and ENVIRONMENT, just in case
# /etc/default/$name gets deleted
HTTP-FILES="/srv/nulpunt.nu"
HTTP-PORT="8001"
ENVIRONMENT="prod"

set -e

# source default
if [ -f /etc/default/$NAME ] ; then
	. /etc/default/$NAME
fi

# test daemon user
if [ -n "$DAEMONUSER" ] ; then
	getent passwd | grep -q "^$DAEMONUSER:"
	if [ $? -ne 0 ]; then
		log_failure_msg \
			"The user $DAEMONUSER, required to run $NAME does not exist."
		exit 1
	fi
fi

start() {
	echo "Starting $NAME..."
	start-stop-daemon --start --make-pidfile --pidfile /var/run/$NAME.pid \
		--background --chuid $DAEMONUSER --http-files=$HTTP-FILES \
		--http-port=$HTTP-PORT 	--environment=$ENVIRONMENT $DAEMONOPTS
	echo "done"
}

stop() {
	echo "Stopping $NAME..."
	if test -f /var/run/$NAME.pid; then
		while test -d /proc/$(cat /var/run/$NAME.pid); do
			killtree($cat /var/run/$NAME.pid) 15
			sleep 0.5
		done
		rm /var/run/$NAME.pid
	fi
	echo "done"
}

status() {
	status_of_proc -p /var/run/$NAME.pid "" "npserver" && exit 0 || exit $?
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|status" >&2
		exit 1
		;;
esac

exit 0
